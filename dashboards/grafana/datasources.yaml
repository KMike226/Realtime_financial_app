# Configuration des sources de données Grafana
# ===========================================

apiVersion: 1

datasources:
  # CloudWatch pour métriques AWS (optimisé pour temps réel)
  - name: CloudWatch
    type: cloudwatch
    access: proxy
    uid: cloudwatch
    jsonData:
      authType: default
      defaultRegion: us-east-1
      customMetricsNamespaces: "AWS/Lambda,AWS/Kinesis,AWS/S3,CWAgent,FinancialPlatform"
      queryTimeout: "30s"
      maxConcurrentQueries: 20
      cacheEnabled: false
      cacheExpirySeconds: 0
    editable: true

  # Athena pour requêtes S3 (optimisé pour temps réel)
  - name: Athena
    type: grafana-athena-datasource
    access: proxy
    uid: athena
    jsonData:
      authType: default
      defaultRegion: us-east-1
      catalog: AwsDataCatalog
      database: financial_data
      workgroup: primary
      s3OutputLocation: s3://financial-platform-dev-data-lake/athena-results/
      queryTimeout: "30s"
      maxConcurrentQueries: 20
      cacheEnabled: false
      cacheExpirySeconds: 0
    editable: true

  # S3 direct access (si nécessaire)
  - name: S3
    type: grafana-s3-datasource
    access: proxy
    uid: s3
    jsonData:
      authType: default
      defaultRegion: us-east-1
      defaultBucket: financial-platform-dev-data-lake
    editable: true

  # Prometheus pour métriques custom (optimisé pour temps réel)
  - name: Prometheus
    type: prometheus
    access: proxy
    uid: prometheus
    url: http://prometheus:9090
    jsonData:
      timeInterval: "2s"
      queryTimeout: "30s"
      httpMethod: "GET"
      maxConcurrentQueries: 20
      cacheEnabled: false
      cacheExpirySeconds: 0
    editable: true
    isDefault: false

  # Logs CloudWatch
  - name: CloudWatch Logs
    type: cloudwatch
    access: proxy
    uid: cloudwatch-logs
    jsonData:
      authType: default
      defaultRegion: us-east-1
      defaultLogGroups: 
        - "/aws/lambda/financial-platform-dev-kinesis-processor"
        - "/aws/lambda/financial-platform-dev-alert-processor"
        - "/aws/ecs/financial-platform-dev-grafana"
        - "/aws/apigateway/financial-platform-dev"
    editable: true

  # WebSocket pour streaming temps réel
  - name: WebSocket Stream
    type: websocket
    access: proxy
    uid: websocket-stream
    url: ws://localhost:8080/ws
    jsonData:
      reconnectInterval: 5000
      maxReconnectAttempts: 10
      heartbeatInterval: 30000
      queryTimeout: "30s"
    editable: true
    isDefault: false

  # TestData pour les tests et développement
  - name: TestData
    type: testdata
    access: proxy
    uid: testdata
    editable: true
    isDefault: false

deleteDatasources:
  - name: "Old CloudWatch"
    orgId: 1
